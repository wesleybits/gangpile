#+TITlE: Gangpile

For when you need to run a script, repeatedly, and at scale.

* What it does:
  It spawns multiple subprocesses that run a script or a program repeatedly,
  ideally without arguments (not implemented yet). These subprocesses cache the
  standard outputs (stdout and stderr), and stream them back to the gangpile
  manager. The manager will then put these logs into a SQLite database for you
  to examine later.
  
  At first blush, this may seem to be DDoS tool, and it can certainly be used as
  one, but it's not actually meant for that. It's for load testing, and a
  personal exercise in familiarizing myself with Go's standard RPC library.

* Build It
  1. ~go get~
  2. Build the bits; order doesn't matter:
     - ~go build -o gangpile gangpile/gangpile.go~
     - ~go build -o localrunner localrunner/localrunner.go~
  3. Get together the script you want to abuse
     
* Run It
  1. Get together an idempotent script like this one:
     #+BEGIN_SRC sh
     #!/bin/bash 
     # -- naggem.sh --

     # girlfriend is late again... this'll get her attention
     curl -XPUT -d'{"text": "ready yet?", "number": "+1888555MYGF"}' https://my.sms.api.fail/send-message
     #+END_SRC

  2. Make the script executable
     #+BEGIN_SRC sh
     $ chmod +x naggem.sh
     #+END_SRC
     
  3. Start the program from this directory
     #+BEGIN_SRC sh
     $ ./gangpile local 12 path/to/naggem.sh
     #+END_SRC
     
  4. ??? 

  5. Profit! (or breakup)
     
  6. Press ~Ctrl-C~ to end the gangpile
